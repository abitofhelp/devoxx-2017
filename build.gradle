buildscript {
	ext.kotlin_version = '1.1.51'

	repositories {
		jcenter()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
		classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
		classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.8.RELEASE")
		classpath "io.spring.gradle:dependency-management-plugin:0.6.0.RELEASE"
		classpath "com.github.jengelman.gradle.plugins:shadow:1.2.4"
		classpath "gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:1.0.7"
		classpath "com.github.ben-manes:gradle-versions-plugin:0.15.0"
		classpath "org.owasp:dependency-check-gradle:2.1.1"
		classpath "org.junit.platform:junit-platform-gradle-plugin:1.0.0-RC3"
		classpath "se.transmode.gradle:gradle-docker:1.2"
		classpath "gradle.plugin.com.github.ksoichiro:gradle-build-info-plugin:0.2.0"
		classpath "org.junit.platform:junit-platform-gradle-plugin:1.0.0-RC3"
		classpath "gradle.plugin.org.jlleitschuh.gradle:ktlint-gradle:2.2.1"
		classpath "gradle.plugin.io.gitlab.arturbosch.detekt:detekt-gradle-plugin:1.0.0.RC5-3"
	}
}

subprojects {
	buildscript {
		repositories {
			jcenter()
		}
	}

	apply plugin: "kotlin"
	apply plugin: "io.spring.dependency-management"
	apply plugin: "org.junit.platform.gradle.plugin"
	apply plugin: "org.jlleitschuh.gradle.ktlint"
	apply plugin: "io.gitlab.arturbosch.detekt"

	sourceCompatibility = 1.8
	targetCompatibility = 1.8

	dependencyManagement {
		imports {
			mavenBom "io.spring.platform:platform-bom:Brussels-SR5"
		}
	}

	dependencies {
		compile "org.jetbrains.kotlin:kotlin-stdlib-jre8"
		compile "com.google.code.findbugs:jsr305:3.0.1"
		testCompile("org.junit.jupiter:junit-jupiter-api:5.0.0-RC2")
		testRuntime("org.junit.jupiter:junit-jupiter-engine:5.0.0-RC2")
		testRuntime("org.junit.platform:junit-platform-launcher:1.0.0-RC2")
		testCompile("junit:junit:4.12")
		testRuntime("org.junit.vintage:junit-vintage-engine:4.12.0-RC2")
		testCompile "org.assertj:assertj-core:3.6.1"
	}

	detekt {
//		version = "1.0.0.RC5-3"
//		profile("main") {
//			input = "$projectDir/src/main/kotlin"
//			config = "$projectDir/detekt.yml"
//			filters = ".*test.*,.*/resources/.*,.*/tmp/.*"
//		}
	}
}

project(":main-partition") {
	apply plugin: "kotlin-spring"
	apply plugin: "org.springframework.boot"
	apply plugin: "docker"
	apply plugin: "com.github.ksoichiro.build.info"

	dependencies {
		compile project(":domain")
		compile project(":app-api")
		compile project(":app-impl")
		compile project(":infra-web")
		compile project(":infra-persistence")

		compile("org.springframework.boot:spring-boot-starter-web") {
			exclude module: "spring-boot-starter-tomcat"
		}
		compile "org.springframework.boot:spring-boot-starter-undertow"
		compile "org.springframework.boot:spring-boot-actuator"

		testCompile "org.springframework.boot:spring-boot-starter-test"
		testCompile "com.jayway.restassured:spring-mock-mvc:2.9.0"
	}

	springBoot {
		buildInfo()
	}

	task buildDocker(type: Docker, dependsOn: build, group: "build") {
		description = "Build Docker image."
		applicationName = "project-kali-server"
		dockerfile = file("Dockerfile")
		tag = "sourcedbvba/project-kali-server"
		doFirst {
			copy {
				from jar
				into "${stageDir}/target"
			}
		}
	}

	task buildDockerCiLatest(type: Docker, dependsOn: build, group: "build") {
		description = "Build Docker image."
		applicationName = "project-kali-server"
		dockerfile = file("Dockerfile")
		tagVersion = "latest"
		tag = "registry.gitlab.com/lievendoclo/project-kali-server"
		doFirst {
			copy {
				from jar
				into "${stageDir}/target"
			}
		}
	}
}

project(":domain") {

}

project(":app-api") {

}

project(":app-impl") {
	dependencies {
		compile project(":app-api")
		compile project(":domain")
	}
}

project("infra-persistence") {
	dependencies {
		compile project(":domain")
	}
}

project("infra-web") {
	dependencies {
		compile project(":app-api")
	}
}
